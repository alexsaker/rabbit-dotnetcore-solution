version: "3.1"

services:
  webapi:
    restart: on-failure
    container_name: webapi
    build: ./WebApi
    ports:
      - 8080:80
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - logstash
      - kibana
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.6.2
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    ports:
      - "5000:5000"
    volumes:
      - ./docker/logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf:ro
    depends_on:
      - elasticsearch
      - rabbitmq
    networks:
      - elastic
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8.3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./docker/rabbit/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./docker/rabbit/custom_definitions.json:/etc/rabbitmq/custom_definitions.json:ro
    networks:
      - elastic
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - elastic

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - elastic

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:
